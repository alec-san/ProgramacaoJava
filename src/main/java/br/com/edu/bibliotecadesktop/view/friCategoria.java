/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.edu.bibliotecadesktop.view;

import br.com.edu.bibliotecadesktop.conexao.CategoriaDAO;
import br.com.edu.bibliotecadesktop.dto.CategoriaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alecksandre
 */
public class friCategoria extends javax.swing.JInternalFrame {

    /**
     * Creates new form friCategoria
     */
    public friCategoria() {
        initComponents();
        listarCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdCategoria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCategoria = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        btnCadastrarCategoria = new javax.swing.JButton();
        btnEditarCategoria = new javax.swing.JButton();
        btnRemoverCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCategoria = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Categoria");
        setPreferredSize(new java.awt.Dimension(514, 348));

        jLabel1.setText("Código:");

        txtIdCategoria.setEnabled(false);

        jLabel2.setText("Nome:");

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnCadastrarCategoria.setText("Cadastrar");
        btnCadastrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarCategoriaActionPerformed(evt);
            }
        });

        btnEditarCategoria.setText("Editar");
        btnEditarCategoria.setEnabled(false);
        btnEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCategoriaActionPerformed(evt);
            }
        });

        btnRemoverCategoria.setText("Remover");
        btnRemoverCategoria.setEnabled(false);
        btnRemoverCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverCategoriaActionPerformed(evt);
            }
        });

        tbCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCategoria);
        if (tbCategoria.getColumnModel().getColumnCount() > 0) {
            tbCategoria.getColumnModel().getColumn(0).setMinWidth(20);
            tbCategoria.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLimpar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCadastrarCategoria)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditarCategoria)
                                .addGap(18, 18, 18)
                                .addComponent(btnRemoverCategoria))
                            .addComponent(txtIdCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnCadastrarCategoria)
                    .addComponent(btnEditarCategoria)
                    .addComponent(btnRemoverCategoria))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // limpar campos
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCadastrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarCategoriaActionPerformed
        // chama a função para cadastro
        cadastrarCategoria();
        limparCampos();
        listarCategoria();
    }//GEN-LAST:event_btnCadastrarCategoriaActionPerformed

    private void btnEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCategoriaActionPerformed
        // Atualizar dado no banco
        editarCategoria();
        limparCampos();
        listarCategoria();
    }//GEN-LAST:event_btnEditarCategoriaActionPerformed

    private void btnRemoverCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverCategoriaActionPerformed
        // TODO add your handling code here::
        Object[] opt = {"Sim", "Não"};
        if (JOptionPane.showOptionDialog(null, "Deseja excluir do Banco de dados?", "Aviso", JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, opt, opt[0]) == JOptionPane.YES_OPTION) {
            deletarCategoria();
            limparCampos();
            listarCategoria();
        }
        limparCampos();
    }//GEN-LAST:event_btnRemoverCategoriaActionPerformed

    private void tbCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriaMouseClicked
        // Selectiona um dado da tabela para editá-lo
        DefaultTableModel tabela = (DefaultTableModel) tbCategoria.getModel();
        String cmpCodigo = tabela.getValueAt(tbCategoria.getSelectedRow(), 0).toString();
        String cmpNome = tabela.getValueAt(tbCategoria.getSelectedRow(), 1).toString();
        
        //captura os campos textos.
        txtIdCategoria.setText(cmpCodigo);
        txtNomeCategoria.setText(cmpNome);
        //habilita e desabilita botões.
        btnCadastrarCategoria.setEnabled(false);
        btnEditarCategoria.setEnabled(true);
        btnRemoverCategoria.setEnabled(true);
    }//GEN-LAST:event_tbCategoriaMouseClicked

    public void deletarCategoria() {
        //capturar o campos codigo(id)
        Long idCategoria = Long.parseLong(txtIdCategoria.getText());
        //
        CategoriaDTO categoriaDto = new CategoriaDTO();
        categoriaDto.setId(idCategoria);
        //
        CategoriaDAO categoriaDao = new CategoriaDAO();
        categoriaDao.DeletarCategoria(categoriaDto);
    }

    public void editarCategoria() {
        //capturar os campos codigo e nome
        Long idCategoria = Long.parseLong(txtIdCategoria.getText());
        String nomeCategoria = txtNomeCategoria.getText();
        //
        CategoriaDTO categoriaDto = new CategoriaDTO();
        categoriaDto.setId(idCategoria);
        categoriaDto.setNome(nomeCategoria);
        //
        CategoriaDAO categoriaDao = new CategoriaDAO();
        categoriaDao.AtualizarCategoria(categoriaDto);
    }

    public void cadastrarCategoria() {
        // coleta o dado do textfield
        String nomeCategoria = txtNomeCategoria.getText();
        CategoriaDTO categoriaDto = new CategoriaDTO();
        categoriaDto.setNome(nomeCategoria);
        //
        CategoriaDAO categoriaDao = new CategoriaDAO();
        categoriaDao.CadastrarCategoria(categoriaDto);
    }

    public void listarCategoria() {
        try {
            CategoriaDAO categoriaDao = new CategoriaDAO();
            DefaultTableModel tabela = (DefaultTableModel) tbCategoria.getModel();
            tabela.setNumRows(0);
            ArrayList<CategoriaDTO> lista = categoriaDao.PesquisarCategoria();
            for (int i = 0; i < lista.size(); i++) {
                tabela.addRow(new Object[]{
                    lista.get(i).getId(),
                    lista.get(i).getNome() //nome da categoria
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Consultar dados da tabela Categoria:" + erro);
        }
    }

    public void limparCampos() {
        //limpa os campos textfield
        txtIdCategoria.setText("");
        txtNomeCategoria.setText("");
        //habilita e desabilita botões.
        btnCadastrarCategoria.setEnabled(true);
        btnEditarCategoria.setEnabled(false);
        btnRemoverCategoria.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrarCategoria;
    private javax.swing.JButton btnEditarCategoria;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnRemoverCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbCategoria;
    private javax.swing.JTextField txtIdCategoria;
    private javax.swing.JTextField txtNomeCategoria;
    // End of variables declaration//GEN-END:variables
}
